{"ast":null,"code":"var _jsxFileName = \"/home/zied/project/js/slack-clone/client/src/routes/Register.tsx\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Checkbox, Container, Input, Image } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport RegisterLogo from \"../assets/register-logo.png\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nconst StyledImage = styled(Image)`\n  margin: auto;\n`;\nconst ImageContainer = styled.div`\n  text-align: center;\n`;\nexport const Register = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [register] = useRegisterMutation();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const res = await register({\n      variables: {\n        email,\n        password,\n        username\n      }\n    });\n  };\n\n  return React.createElement(Container, {\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ImageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(StyledImage, {\n    rounded: true,\n    fluid: true,\n    centered: true,\n    verticalAlign: \"middle\",\n    src: RegisterLogo,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    onChange: e => setUsername(e.target.value),\n    placeholder: \"username\",\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"email\",\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"password\",\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Submit\")));\n};","map":{"version":3,"sources":["/home/zied/project/js/slack-clone/client/src/routes/Register.tsx"],"names":["React","useState","Form","Button","Checkbox","Container","Input","Image","styled","RegisterLogo","useRegisterMutation","StyledImage","ImageContainer","div","Register","history","email","setEmail","username","setUsername","password","setPassword","register","onSubmit","e","preventDefault","res","variables","target","value"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from \"react\";\nimport {\n  Form,\n  Button,\n  Checkbox,\n  Container,\n  Input,\n  Image\n} from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nimport RegisterLogo from \"../assets/register-logo.png\";\nimport { useRegisterMutation } from \"../generated/graphql\";\n\ninterface RegisterProps  extends BrowserRouterProps{}\n\nconst StyledImage = styled(Image)`\n  margin: auto;\n`;\n\nconst ImageContainer = styled.div`\n  text-align: center;\n`;\n\nexport const Register: React.FC<RegisterProps> = ({history}) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [register]= useRegisterMutation()\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    const res = await register({\n        variables:{\n            email,\n            password,\n            username\n        }\n    })\n    \n    \n  };\n  return (\n    <Container text>\n      <ImageContainer>\n        <StyledImage\n          rounded\n          fluid\n          centered\n          verticalAlign=\"middle\"\n          src={RegisterLogo}\n          size=\"small\"\n        />\n      </ImageContainer>\n      <Form onSubmit={e => onSubmit(e)}>\n        <Form.Field>\n          <label>Username</label>\n          <Input\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"username\"\n            fluid\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <label>Email</label>\n          <Input\n            onChange={e => setEmail(e.target.value)}\n            placeholder=\"email\"\n            fluid\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <Input\n            type=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            placeholder=\"password\"\n            fluid\n          />\n        </Form.Field>\n        <Form.Field>\n          <Checkbox label=\"I agree to the Terms and Conditions\" />\n        </Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
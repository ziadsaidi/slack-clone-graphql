{"ast":null,"code":"var _jsxFileName = \"/home/zied/project/js/slack-clone/client/src/App.tsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useGetUsersQuery } from './generated/graphql';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient } from 'apollo-client';\nconst client = new ApolloClient({\n  uri: 'http:'\n});\n\nfunction App() {\n  const {\n    data\n  } = useGetUsersQuery();\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data === null || data === void 0 ? void 0 : data.getAllUsers.map(user => {\n    return React.createElement(\"div\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"  \", user.email, \" \");\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zied/project/js/slack-clone/client/src/App.tsx"],"names":["React","useGetUsersQuery","ApolloProvider","ApolloClient","client","uri","App","data","logo","getAllUsers","map","user","id","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAAQC,cAAR,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,MAAMC,MAAM,GAAG,IAAKD,YAAL,CAAkB;AAC/BE,EAAAA,GAAG,EAAE;AAD0B,CAAlB,CAAf;;AAIA,SAASC,GAAT,GAAe;AAGb,QAAM;AAACC,IAAAA;AAAD,MAASN,gBAAgB,EAA/B;AACA,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEI,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,IADF,aACEA,IADF,uBACEA,IAAI,CAAEE,WAAN,CAAkBC,GAAlB,CAAsBC,IAAI,IAAK;AAC9B,WAAO;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsBD,IAAI,CAACE,KAA3B,MAAP;AACD,GAFA,CADF,CAFF,CADF,CADA,CADF;AAgBD;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useGetUsersQuery } from './generated/graphql';\n\nimport {ApolloProvider} from'@apollo/react-hooks'\nimport { ApolloClient } from 'apollo-client';\n\nconst client = new  ApolloClient({\n  uri: 'http:',\n});\n\nfunction App() {\n\n\n  const {data} = useGetUsersQuery();\n  return (\n    <ApolloProvider client={client}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n         {data?.getAllUsers.map(user =>  {\n           return <div key={user.id}>  {user.email} </div>\n         })\n        }\n        </p>\n           \n      </header>\n    </div>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
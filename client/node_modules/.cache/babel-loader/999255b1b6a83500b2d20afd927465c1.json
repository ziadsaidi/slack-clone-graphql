{"ast":null,"code":"var _jsxFileName = \"/home/zied/project/js/slack-clone/client/src/App.tsx\";\nimport React from 'react';\nimport { useGetUsersQuery } from './generated/graphql';\n\nfunction App() {\n  const {\n    data,\n    loading,\n    re\n  } = useGetUsersQuery();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, data === null || data === void 0 ? void 0 : data.getAllUsers.map(user => {\n    return React.createElement(\"div\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"  \", user.email, \" \");\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zied/project/js/slack-clone/client/src/App.tsx"],"names":["React","useGetUsersQuery","App","data","loading","re","getAllUsers","map","user","id","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAuD,qBAAvD;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAoBJ,gBAAgB,EAA1C;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEE,IADF,aACEA,IADF,uBACEA,IAAI,CAAEG,WAAN,CAAkBC,GAAlB,CAAsBC,IAAI,IAAK;AAC9B,WAAO;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsBD,IAAI,CAACE,KAA3B,MAAP;AACD,GAFA,CADF,CADF,CADF,CADF;AAaD;;AAED,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport { useGetUsersQuery, useGetUsersLazyQuery } from './generated/graphql';\n\nfunction App() {\n  const {data,loading,re} = useGetUsersQuery();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n         {data?.getAllUsers.map(user =>  {\n           return <div key={user.id}>  {user.email} </div>\n         })\n        }\n        </p>\n           \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
import { PluginFunction, PluginValidateFn } from '@graphql-codegen/plugin-helpers';
export interface TypeScriptFilesModulesPluginConfig {
    /**
     * @name modulePathPrefix
     * @type string
     * @default ''
     * @description Allows specifying a module definiton path prefix to provide distinction
     * between generated types.
     *
     * @example
     * ```yml
     * generates: src/api/user-service/queries.d.ts
     *  documents: src/api/user-service/queries.graphql
     *  plugins:
     *    - typescript
     *    - typescript-graphql-files-modules
     *  config:
     *    # resulting module definition path glob: "*\/api/user-service/queries.graphql"
     *    modulePathPrefix: "/api/user-service/"
     * ```
     */
    modulePathPrefix?: string;
    /**
     * @name relativeToCwd
     * @type boolean
     * @default false
     * @description By default, only the filename is being used to generate TS module declarations. Setting this to `true` will generate it with a full path based on the CWD.
     */
    relativeToCwd?: boolean;
    /**
     * @name prefix
     * @type string
     * @default *\/
     * @description By default, a wildcard is being added as prefix, you can change that to a custom prefix
     */
    prefix?: string;
}
export declare const plugin: PluginFunction;
export declare const validate: PluginValidateFn<any>;
